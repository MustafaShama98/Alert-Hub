spring.application.name=api-gateway
#Server port
server.port=8222

# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=false
eureka.instance.instance-id=${spring.application.name}:${random.uuid}
eureka.instance.ip-address=127.0.0.1

# Eureka Stability Configuration
eureka.client.fetch-registry-interval-seconds=30
eureka.instance.lease-renewal-interval-in-seconds=30
eureka.instance.lease-expiration-duration-in-seconds=90
eureka.client.registry-fetch-interval-seconds=30
eureka.client.eureka-server-connect-timeout-seconds=5
eureka.client.eureka-server-read-timeout-seconds=8
eureka.instance.registry-fetch-interval-seconds=30

# Load Balancer Configuration
spring.cloud.loadbalancer.ribbon.enabled=false
spring.cloud.loadbalancer.retry.enabled=true
spring.cloud.loadbalancer.retry.max-retries-on-same-service-instance=2
spring.cloud.loadbalancer.retry.max-retries-on-next-service-instance=1
spring.cloud.loadbalancer.retry.retry-on-all-operations=false
spring.cloud.loadbalancer.cache.ttl=30s
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Actuator endpoints
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always

# Metrics Configuration
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Rate Limiter Configuration
resilience4j.ratelimiter.configs.default.limit-for-period=100
resilience4j.ratelimiter.configs.default.limit-refresh-period=1s

# Logging Configuration
logging.level.org.springframework.cloud.gateway=TRACE
logging.level.org.springframework.security=TRACE
logging.level.org.springframework.cloud.loadbalancer=TRACE
logging.level.org.springframework.web.reactive=DEBUG
logging.level.reactor.netty.http.client=TRACE
logging.level.org.springframework.web.server.adapter=TRACE
logging.level.org.springframework.security.web=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Route configurations
spring.cloud.discovery.enabled=true

# Security Service Routes
spring.cloud.gateway.routes[3].id=security-service
spring.cloud.gateway.routes[3].uri=lb://security-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/security/**
spring.cloud.gateway.routes[3].filters[0]=PreserveHostHeader
spring.cloud.gateway.routes[3].filters[1]=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin

# Loader Service Routes
spring.cloud.gateway.routes[0].id=loader-service
spring.cloud.gateway.routes[0].uri=lb://loader-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/loader/**

# Evaluation Service Routes
spring.cloud.gateway.routes[1].id=evaluation-service
spring.cloud.gateway.routes[1].uri=lb://evaluation-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/evaluation/**

# Users Service Routes
spring.cloud.gateway.routes[2].id=users-service
spring.cloud.gateway.routes[2].uri=lb://users-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/users/**

# CORS Configuration
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOriginPatterns=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS,HEAD
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].exposedHeaders=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=true
spring.cloud.gateway.globalcors.corsConfigurations.[/**].maxAge=3600

# JWT secret (same as security-service, base64-encoded)
jwt.secret=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970

# Connection Pool and Timeout Configuration
spring.cloud.gateway.httpclient.response-timeout=60s
spring.cloud.gateway.httpclient.connect-timeout=30000
spring.cloud.gateway.httpclient.pool.max-idle-time=60s
spring.cloud.gateway.httpclient.pool.type=elastic
spring.cloud.gateway.httpclient.pool.max-connections=50
spring.cloud.gateway.httpclient.pool.acquire-timeout=60000
